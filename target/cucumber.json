[
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-11-29T07:54:25.935Z",
        "before": [
          {
            "output": [
              "--Starting the Execution--"
            ],
            "result": {
              "duration": 1461807000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 15,
        "name": "user is able to create Kerberos connection",
        "description": "",
        "id": "user-should-be-able-to-create--validate-connections-on-connections-page;user-is-able-to-create-kerberos-connection;;2",
        "after": [
          {
            "result": {
              "duration": 3276000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "output": [
              "---Closing the Browser---"
            ],
            "result": {
              "duration": 75792000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.quitBrowser(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8260275000,
              "status": "passed"
            },
            "line": 6,
            "name": "user is on DIL login page",
            "match": {
              "location": "com.steps.commonSteps.userIsOnDILLoginPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 336329000,
              "status": "passed"
            },
            "line": 7,
            "name": "enter username and password",
            "match": {
              "location": "com.steps.commonSteps.enterUsernameAndPassword()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5814553000,
              "status": "passed"
            },
            "line": 8,
            "name": "navigates to the \"Create a connection\" tab",
            "match": {
              "arguments": [
                {
                  "val": "\"Create a connection\"",
                  "offset": 17
                }
              ],
              "location": "com.steps.createConnectionsSteps.navigatesToTheTab(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 811850000,
              "status": "passed"
            },
            "line": 9,
            "name": "enters \"AutomationKerberos\",\"Creating Connection\",\"KERBEROS\",principal and fileType",
            "match": {
              "arguments": [
                {
                  "val": "\"AutomationKerberos\"",
                  "offset": 7
                },
                {
                  "val": "\"Creating Connection\"",
                  "offset": 28
                },
                {
                  "val": "\"KERBEROS\"",
                  "offset": 50
                }
              ],
              "location": "com.steps.createConnectionsSteps.entersPrincipalAndFileType(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 536040000,
              "status": "passed"
            },
            "line": 10,
            "name": "connection should be tested successfully",
            "match": {
              "location": "com.steps.createConnectionsSteps.connectionShouldBeTestedSuccessfully()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 69268000,
              "status": "passed"
            },
            "line": 11,
            "name": "creates the connection",
            "match": {
              "location": "com.steps.createConnectionsSteps.createsTheConnection()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7796244000,
              "status": "passed"
            },
            "line": 12,
            "name": "connection with \"AutomationKerberos\" should be validated on Connection listing page",
            "match": {
              "arguments": [
                {
                  "val": "\"AutomationKerberos\"",
                  "offset": 16
                }
              ],
              "location": "com.steps.createConnectionsSteps.connectionWithShouldBeValidatedOnConnectionListingPage(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@CreateConnection"
          },
          {
            "name": "@Smoke"
          },
          {
            "name": "@Reg"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@CRC-Test1"
          },
          {
            "name": "@TC1"
          },
          {
            "name": "@Demo"
          }
        ]
      },
      {
        "start_timestamp": "2021-11-29T07:54:51.175Z",
        "before": [
          {
            "output": [
              "--Starting the Execution--"
            ],
            "result": {
              "duration": 1095299000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 30,
        "name": "user is able to create SSL connection",
        "description": "",
        "id": "user-should-be-able-to-create--validate-connections-on-connections-page;user-is-able-to-create-ssl-connection;;2",
        "after": [
          {
            "result": {
              "duration": 542000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "output": [
              "---Closing the Browser---"
            ],
            "result": {
              "duration": 78324000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.quitBrowser(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6459456000,
              "status": "passed"
            },
            "line": 20,
            "name": "user is on DIL login page",
            "match": {
              "location": "com.steps.commonSteps.userIsOnDILLoginPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1324221000,
              "status": "passed"
            },
            "line": 21,
            "name": "enter username and password",
            "match": {
              "location": "com.steps.commonSteps.enterUsernameAndPassword()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5809823000,
              "status": "passed"
            },
            "line": 22,
            "name": "navigates to the \"Create a connection\" tab",
            "match": {
              "arguments": [
                {
                  "val": "\"Create a connection\"",
                  "offset": 17
                }
              ],
              "location": "com.steps.createConnectionsSteps.navigatesToTheTab(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 594942000,
              "status": "passed"
            },
            "line": 23,
            "name": "enters \"AutomationSSL\",\"Creating Connection\",\"SSL\"",
            "match": {
              "arguments": [
                {
                  "val": "\"AutomationSSL\"",
                  "offset": 7
                },
                {
                  "val": "\"Creating Connection\"",
                  "offset": 23
                },
                {
                  "val": "\"SSL\"",
                  "offset": 45
                }
              ],
              "location": "com.steps.createConnectionsSteps.enters(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5602719000,
              "status": "passed"
            },
            "line": 24,
            "name": "enters \"kafka-keystore.jks\",\"kafka-truststore.jks\",\"confluent\",\"confluent\",\"TLS\"",
            "match": {
              "arguments": [
                {
                  "val": "\"kafka-keystore.jks\"",
                  "offset": 7
                },
                {
                  "val": "\"kafka-truststore.jks\"",
                  "offset": 28
                },
                {
                  "val": "\"confluent\"",
                  "offset": 51
                },
                {
                  "val": "\"confluent\"",
                  "offset": 63
                },
                {
                  "val": "\"TLS\"",
                  "offset": 75
                }
              ],
              "location": "com.steps.createConnectionsSteps.enters(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 725098000,
              "status": "passed"
            },
            "line": 25,
            "name": "connection should be tested successfully",
            "match": {
              "location": "com.steps.createConnectionsSteps.connectionShouldBeTestedSuccessfully()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 148000000,
              "status": "passed"
            },
            "line": 26,
            "name": "creates the connection",
            "match": {
              "location": "com.steps.createConnectionsSteps.createsTheConnection()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7829319000,
              "status": "passed"
            },
            "line": 27,
            "name": "connection with \"AutomationSSL\" should be validated on Connection listing page",
            "match": {
              "arguments": [
                {
                  "val": "\"AutomationSSL\"",
                  "offset": 16
                }
              ],
              "location": "com.steps.createConnectionsSteps.connectionWithShouldBeValidatedOnConnectionListingPage(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@CreateConnection"
          },
          {
            "name": "@Smoke"
          },
          {
            "name": "@Reg"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@CRC-Test2"
          },
          {
            "name": "@TC2"
          },
          {
            "name": "@Demo"
          }
        ]
      }
    ],
    "name": "User should be able to Create, Validate Connections on Connections Page",
    "description": "",
    "id": "user-should-be-able-to-create--validate-connections-on-connections-page",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/projects/CreateConnection.feature",
    "tags": [
      {
        "name": "@CreateConnection",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-11-29T07:55:20.871Z",
        "before": [
          {
            "output": [
              "--Starting the Execution--"
            ],
            "result": {
              "duration": 1095534000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 30,
        "name": "user is able validate pipeline properties",
        "description": "",
        "id": "creation-and-field-level-validation-of-pipelines;user-is-able-validate-pipeline-properties;;2",
        "after": [
          {
            "result": {
              "duration": 96000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "output": [
              "---Closing the Browser---"
            ],
            "result": {
              "duration": 73416000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.quitBrowser(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6109415000,
              "status": "passed"
            },
            "line": 22,
            "name": "user is on DIL login page",
            "match": {
              "location": "com.steps.commonSteps.userIsOnDILLoginPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 298613000,
              "status": "passed"
            },
            "line": 23,
            "name": "enter username and password",
            "match": {
              "location": "com.steps.commonSteps.enterUsernameAndPassword()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2008090000,
              "status": "passed"
            },
            "line": 24,
            "name": "clicks on createProject tab",
            "match": {
              "location": "com.steps.createProjectSteps.clicksOnCreateProjectTab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 468840000,
              "status": "passed"
            },
            "line": 25,
            "name": "creates project with \"AutoDIL\",\"ProjectForAutomation\",\"Test_Pipeline\" and engine",
            "match": {
              "arguments": [
                {
                  "val": "AutoDIL",
                  "offset": 22
                },
                {
                  "val": "ProjectForAutomation",
                  "offset": 32
                },
                {
                  "val": "Test_Pipeline",
                  "offset": 55
                }
              ],
              "location": "com.steps.createProjectSteps.entersAndSelectEngine(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6601499000,
              "status": "passed"
            },
            "line": 26,
            "name": "creates a \"PipeLIne\" with \"ProjectForAutomation\",\"Test_Pipeline\",\"STREAMING\",\"k1\",\"v1\",\"s1\" and \"v2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PipeLIne\"",
                  "offset": 10
                },
                {
                  "val": "\"ProjectForAutomation\"",
                  "offset": 26
                },
                {
                  "val": "\"Test_Pipeline\"",
                  "offset": 49
                },
                {
                  "val": "\"STREAMING\"",
                  "offset": 65
                },
                {
                  "val": "\"k1\"",
                  "offset": 77
                },
                {
                  "val": "\"v1\"",
                  "offset": 82
                },
                {
                  "val": "\"s1\"",
                  "offset": 87
                },
                {
                  "val": "\"v2\"",
                  "offset": 96
                }
              ],
              "location": "com.steps.createPipeLineSteps.createsAWithAnd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1221486000,
              "status": "passed"
            },
            "line": 27,
            "name": "PipeLine properties is validated for \"ProjectForAutomation\",\"Test_Pipeline\",\"STREAMING\",\"k1\",\"v1\",\"s1\" and \"v2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"ProjectForAutomation\"",
                  "offset": 37
                },
                {
                  "val": "\"Test_Pipeline\"",
                  "offset": 60
                },
                {
                  "val": "\"STREAMING\"",
                  "offset": 76
                },
                {
                  "val": "\"k1\"",
                  "offset": 88
                },
                {
                  "val": "\"v1\"",
                  "offset": 93
                },
                {
                  "val": "\"s1\"",
                  "offset": 98
                },
                {
                  "val": "\"v2\"",
                  "offset": 107
                }
              ],
              "location": "com.steps.createPipeLineSteps.pipelinePropertiesIsValidatedForAnd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@CreatePipeLine"
          },
          {
            "name": "@Smoke"
          },
          {
            "name": "@Reg"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@CP-Test1"
          },
          {
            "name": "@TC4"
          },
          {
            "name": "@Demo"
          }
        ]
      }
    ],
    "name": "Creation and Field level validation of pipelines",
    "description": "  As a user I want to Create a Pipeline,Validate the PipelineListing Page\n  and is able to validate individual pipelines for field level validation",
    "id": "creation-and-field-level-validation-of-pipelines",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/projects/CreatePipeLine.feature",
    "tags": [
      {
        "name": "@CreatePipeLine",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-11-29T07:55:38.779Z",
        "before": [
          {
            "output": [
              "--Starting the Execution--"
            ],
            "result": {
              "duration": 1087419000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 38,
        "name": "user is able to create a Project and is able to validate it in ProjectListing Page",
        "description": "",
        "id": "creation-of-projects-and-validation-of-project-setting-pop-up;user-is-able-to-create-a-project-and-is-able-to-validate-it-in-projectlisting-page;;2",
        "after": [
          {
            "result": {
              "duration": 128000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "output": [
              "---Closing the Browser---"
            ],
            "result": {
              "duration": 77993000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.quitBrowser(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16765825000,
              "status": "passed"
            },
            "line": 31,
            "name": "user is on DIL login page",
            "match": {
              "location": "com.steps.commonSteps.userIsOnDILLoginPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1798305000,
              "status": "passed"
            },
            "line": 32,
            "name": "enter username and password",
            "match": {
              "location": "com.steps.commonSteps.enterUsernameAndPassword()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1814987000,
              "status": "passed"
            },
            "line": 33,
            "name": "clicks on createProject tab",
            "match": {
              "location": "com.steps.createProjectSteps.clicksOnCreateProjectTab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 435289000,
              "status": "passed"
            },
            "line": 34,
            "name": "creates project with \"Auto_Pro\",\"CreatingPipeLine\",\"Test\" and engine",
            "match": {
              "arguments": [
                {
                  "val": "Auto_Pro",
                  "offset": 22
                },
                {
                  "val": "CreatingPipeLine",
                  "offset": 33
                },
                {
                  "val": "Test",
                  "offset": 52
                }
              ],
              "location": "com.steps.createProjectSteps.entersAndSelectEngine(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10863582000,
              "status": "passed"
            },
            "line": 35,
            "name": "created \"Auto_Pro\" with \"Test\"is validated in project listing page",
            "match": {
              "arguments": [
                {
                  "val": "Auto_Pro",
                  "offset": 9
                },
                {
                  "val": "Test",
                  "offset": 25
                }
              ],
              "location": "com.steps.createProjectSteps.createdWithIsValidatedInProjectListingPage(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@CreateProject"
          },
          {
            "name": "@Smoke"
          },
          {
            "name": "@Reg"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@CRP-Test4"
          },
          {
            "name": "@TC11"
          },
          {
            "name": "@Demo"
          }
        ]
      }
    ],
    "name": "Creation of Projects and validation of Project Setting Pop Up",
    "description": "  As a user I want to Create a Project,Validate the Project Setting Pop Up\n  and validate the Project Listing Page with different fields",
    "id": "creation-of-projects-and-validation-of-project-setting-pop-up",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/projects/CreateProject.feature",
    "tags": [
      {
        "name": "@CreateProject",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-11-29T07:56:11.659Z",
        "before": [
          {
            "output": [
              "--Starting the Execution--"
            ],
            "result": {
              "duration": 1059251000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 37,
        "name": "user is able to run created acquire kafka pipeline and validate same in logs",
        "description": "",
        "id": "creation-of-a-end-to-end-execution-of-the-pipeline-for-spark/tmpl-services;user-is-able-to-run-created-acquire-kafka-pipeline-and-validate-same-in-logs;;2",
        "after": [
          {
            "result": {
              "duration": 89000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "output": [
              "---Closing the Browser---"
            ],
            "result": {
              "duration": 84214000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.quitBrowser(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6850826000,
              "status": "passed"
            },
            "line": 8,
            "name": "user is on DIL login page",
            "match": {
              "location": "com.steps.commonSteps.userIsOnDILLoginPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 333507000,
              "status": "passed"
            },
            "line": 9,
            "name": "enter username and password",
            "match": {
              "location": "com.steps.commonSteps.enterUsernameAndPassword()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1647330000,
              "status": "passed"
            },
            "line": 10,
            "name": "clicks on createProject tab",
            "match": {
              "location": "com.steps.createProjectSteps.clicksOnCreateProjectTab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 468362000,
              "status": "passed"
            },
            "line": 11,
            "name": "creates project with \"AutoDIL\",\"ProjectForAutomation\",\"Test_Pipeline\" and engine",
            "match": {
              "arguments": [
                {
                  "val": "AutoDIL",
                  "offset": 22
                },
                {
                  "val": "ProjectForAutomation",
                  "offset": 32
                },
                {
                  "val": "Test_Pipeline",
                  "offset": 55
                }
              ],
              "location": "com.steps.createProjectSteps.entersAndSelectEngine(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1033861000,
              "status": "passed"
            },
            "line": 12,
            "name": "creates a \"PipeLIne\" with \"ProjectForAutomation\",\"Test_Pipeline\",\"STREAMING\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PipeLIne\"",
                  "offset": 10
                },
                {
                  "val": "\"ProjectForAutomation\"",
                  "offset": 26
                },
                {
                  "val": "\"Test_Pipeline\"",
                  "offset": 49
                },
                {
                  "val": "\"STREAMING\"",
                  "offset": 65
                }
              ],
              "location": "com.steps.createPipeLineSteps.createsAWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 772969000,
              "status": "passed"
            },
            "line": 13,
            "name": "enters pipeline properties",
            "match": {
              "location": "com.steps.createPipeLineSteps.enters_pipeline_properties(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PKey",
                  "PValue"
                ]
              },
              {
                "cells": [
                  "serviceType",
                  "AcquireKafka"
                ]
              },
              {
                "cells": [
                  "isSchemaNeededToBeRegister",
                  "true"
                ]
              },
              {
                "cells": [
                  "area",
                  "area"
                ]
              },
              {
                "cells": [
                  "flow",
                  "flow"
                ]
              },
              {
                "cells": [
                  "step",
                  "step"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5193006000,
              "status": "passed"
            },
            "line": 20,
            "name": "Spark properties",
            "match": {
              "location": "com.steps.createPipeLineSteps.spark_properties(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "SKey",
                  "SValue"
                ]
              },
              {
                "cells": [
                  "spark.sql.adaptive.coalescePartitions.enabled",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 818431000,
              "status": "passed"
            },
            "line": 23,
            "name": "clicks on \"Add a Source\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Add a Source\"",
                  "offset": 10
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.clicksOn(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7351685000,
              "status": "passed"
            },
            "line": 24,
            "name": "Enters \"DemoSource\",\"KAFKA\",\"TMPLKafkaConnection\",\"topic1\",\"No_Schema\",\"AutoManualSchemaDND\",\"Earlier\",\"k1\",\"v1\" and clicks on add",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 7
                },
                {
                  "val": "\"KAFKA\"",
                  "offset": 20
                },
                {
                  "val": "\"TMPLKafkaConnection\"",
                  "offset": 28
                },
                {
                  "val": "\"topic1\"",
                  "offset": 50
                },
                {
                  "val": "\"No_Schema\"",
                  "offset": 59
                },
                {
                  "val": "\"AutoManualSchemaDND\"",
                  "offset": 71
                },
                {
                  "val": "\"Earlier\"",
                  "offset": 93
                },
                {
                  "val": "\"k1\"",
                  "offset": 103
                },
                {
                  "val": "\"v1\"",
                  "offset": 108
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.entersAndClicksOnAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 506523000,
              "status": "passed"
            },
            "line": 25,
            "name": "Source should get created with \"DemoSource\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 31
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.sourceShouldGetCreatedWith(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11630715000,
              "status": "passed"
            },
            "line": 26,
            "name": "enters \"DemoDestination\",\"KAFKA\",\"TMPLKafkaConnection\",\"CSV\" ,\".csv\",\"topic2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoDestination\"",
                  "offset": 7
                },
                {
                  "val": "\"KAFKA\"",
                  "offset": 25
                },
                {
                  "val": "\"TMPLKafkaConnection\"",
                  "offset": 33
                },
                {
                  "val": "\"CSV\"",
                  "offset": 55
                },
                {
                  "val": "\".csv\"",
                  "offset": 62
                },
                {
                  "val": "\"topic2\"",
                  "offset": 69
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.entersAndClickAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10535270000,
              "status": "passed"
            },
            "line": 27,
            "name": "enters destination keys and value",
            "match": {
              "location": "com.steps.createSourceDestAndTransform.entersDestinationKeysAndValue(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "DKey",
                  "DValue"
                ]
              },
              {
                "cells": [
                  "trigger",
                  "10 seconds"
                ]
              },
              {
                "cells": [
                  "checkpointLocation",
                  "/tmp/1099/"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 175348000,
              "status": "passed"
            },
            "line": 31,
            "name": "clicks add",
            "match": {
              "location": "com.steps.createSourceDestAndTransform.clicksAdd()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11987074000,
              "status": "passed"
            },
            "line": 32,
            "name": "PipeLine with status \"READY\" is validated",
            "match": {
              "arguments": [
                {
                  "val": "\"READY\"",
                  "offset": 21
                }
              ],
              "location": "com.steps.createPipeLineSteps.pipelineWithStatusIsValidated(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15803444000,
              "status": "passed"
            },
            "line": 33,
            "name": "executes the pipeline",
            "match": {
              "location": "com.steps.createPipeLineSteps.executesThePipeline()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6027809000,
              "status": "passed"
            },
            "line": 34,
            "name": "Pipeline record is validated on logs page",
            "match": {
              "location": "com.steps.createPipeLineSteps.pipelineRecordIsValidatedOnLogsPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@E2EExecutionDemo"
          },
          {
            "name": "@Smoke"
          },
          {
            "name": "@Reg"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@E2EExecution1"
          },
          {
            "name": "@TC31"
          },
          {
            "name": "@Demo"
          }
        ]
      },
      {
        "start_timestamp": "2021-11-29T07:57:34.002Z",
        "before": [
          {
            "output": [
              "--Starting the Execution--"
            ],
            "result": {
              "duration": 1090497000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 71,
        "name": "user is able to run created acquire kafka Swagger pipeline and validate same in logs",
        "description": "",
        "id": "creation-of-a-end-to-end-execution-of-the-pipeline-for-spark/tmpl-services;user-is-able-to-run-created-acquire-kafka-swagger-pipeline-and-validate-same-in-logs;;2",
        "after": [
          {
            "result": {
              "duration": 100000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "output": [
              "---Closing the Browser---"
            ],
            "result": {
              "duration": 80362000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.quitBrowser(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6573458000,
              "status": "passed"
            },
            "line": 41,
            "name": "user is on DIL login page",
            "match": {
              "location": "com.steps.commonSteps.userIsOnDILLoginPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 809175000,
              "status": "passed"
            },
            "line": 42,
            "name": "enter username and password",
            "match": {
              "location": "com.steps.commonSteps.enterUsernameAndPassword()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2324136000,
              "status": "passed"
            },
            "line": 43,
            "name": "clicks on createProject tab",
            "match": {
              "location": "com.steps.createProjectSteps.clicksOnCreateProjectTab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 448939000,
              "status": "passed"
            },
            "line": 44,
            "name": "creates project with \"AutoDIL\",\"ProjectForAutomation\",\"Test_Pipeline\" and engine",
            "match": {
              "arguments": [
                {
                  "val": "AutoDIL",
                  "offset": 22
                },
                {
                  "val": "ProjectForAutomation",
                  "offset": 32
                },
                {
                  "val": "Test_Pipeline",
                  "offset": 55
                }
              ],
              "location": "com.steps.createProjectSteps.entersAndSelectEngine(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1066145000,
              "status": "passed"
            },
            "line": 45,
            "name": "creates a \"PipeLIne\" with \"ProjectForAutomation\",\"Test_Pipeline\",\"STREAMING\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PipeLIne\"",
                  "offset": 10
                },
                {
                  "val": "\"ProjectForAutomation\"",
                  "offset": 26
                },
                {
                  "val": "\"Test_Pipeline\"",
                  "offset": 49
                },
                {
                  "val": "\"STREAMING\"",
                  "offset": 65
                }
              ],
              "location": "com.steps.createPipeLineSteps.createsAWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 877406000,
              "status": "passed"
            },
            "line": 46,
            "name": "enters pipeline properties",
            "match": {
              "location": "com.steps.createPipeLineSteps.enters_pipeline_properties(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PKey",
                  "PValue"
                ]
              },
              {
                "cells": [
                  "serviceType",
                  "AcquireKafkaSwagger"
                ]
              },
              {
                "cells": [
                  "header",
                  "/definitions/ConsentTypeEvent"
                ]
              },
              {
                "cells": [
                  "isSchemaNeededToBeRegister",
                  "true"
                ]
              },
              {
                "cells": [
                  "area",
                  "area"
                ]
              },
              {
                "cells": [
                  "flow",
                  "flow"
                ]
              },
              {
                "cells": [
                  "step",
                  "step"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5203578000,
              "status": "passed"
            },
            "line": 54,
            "name": "Spark properties",
            "match": {
              "location": "com.steps.createPipeLineSteps.spark_properties(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "SKey",
                  "SValue"
                ]
              },
              {
                "cells": [
                  "spark.sql.adaptive.coalescePartitions.enabled",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 791573000,
              "status": "passed"
            },
            "line": 57,
            "name": "clicks on \"Add a Source\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Add a Source\"",
                  "offset": 10
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.clicksOn(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7328734000,
              "status": "passed"
            },
            "line": 58,
            "name": "Enters \"DemoSource\",\"KAFKA\",\"TMPLKafkaConnection\",\"topic1\",\"No_Schema\",\"AutoManualSchemaDND\",\"Earlier\",\"k1\",\"v1\" and clicks on add",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 7
                },
                {
                  "val": "\"KAFKA\"",
                  "offset": 20
                },
                {
                  "val": "\"TMPLKafkaConnection\"",
                  "offset": 28
                },
                {
                  "val": "\"topic1\"",
                  "offset": 50
                },
                {
                  "val": "\"No_Schema\"",
                  "offset": 59
                },
                {
                  "val": "\"AutoManualSchemaDND\"",
                  "offset": 71
                },
                {
                  "val": "\"Earlier\"",
                  "offset": 93
                },
                {
                  "val": "\"k1\"",
                  "offset": 103
                },
                {
                  "val": "\"v1\"",
                  "offset": 108
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.entersAndClicksOnAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 527181000,
              "status": "passed"
            },
            "line": 59,
            "name": "Source should get created with \"DemoSource\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 31
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.sourceShouldGetCreatedWith(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11565822000,
              "status": "passed"
            },
            "line": 60,
            "name": "enters \"DemoDestination\",\"KAFKA\",\"TMPLKafkaConnection\",\"CSV\" ,\".csv\",\"topic2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoDestination\"",
                  "offset": 7
                },
                {
                  "val": "\"KAFKA\"",
                  "offset": 25
                },
                {
                  "val": "\"TMPLKafkaConnection\"",
                  "offset": 33
                },
                {
                  "val": "\"CSV\"",
                  "offset": 55
                },
                {
                  "val": "\".csv\"",
                  "offset": 62
                },
                {
                  "val": "\"topic2\"",
                  "offset": 69
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.entersAndClickAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10507507000,
              "status": "passed"
            },
            "line": 61,
            "name": "enters destination keys and value",
            "match": {
              "location": "com.steps.createSourceDestAndTransform.entersDestinationKeysAndValue(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "DKey",
                  "DValue"
                ]
              },
              {
                "cells": [
                  "trigger",
                  "10 seconds"
                ]
              },
              {
                "cells": [
                  "checkpointLocation",
                  "/tmp/1099/"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 86868000,
              "status": "passed"
            },
            "line": 65,
            "name": "clicks add",
            "match": {
              "location": "com.steps.createSourceDestAndTransform.clicksAdd()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11842930000,
              "status": "passed"
            },
            "line": 66,
            "name": "PipeLine with status \"READY\" is validated",
            "match": {
              "arguments": [
                {
                  "val": "\"READY\"",
                  "offset": 21
                }
              ],
              "location": "com.steps.createPipeLineSteps.pipelineWithStatusIsValidated(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15770422000,
              "status": "passed"
            },
            "line": 67,
            "name": "executes the pipeline",
            "match": {
              "location": "com.steps.createPipeLineSteps.executesThePipeline()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5998804000,
              "status": "passed"
            },
            "line": 68,
            "name": "Pipeline record is validated on logs page",
            "match": {
              "location": "com.steps.createPipeLineSteps.pipelineRecordIsValidatedOnLogsPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@E2EExecutionDemo"
          },
          {
            "name": "@Smoke"
          },
          {
            "name": "@Reg"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@E2EExecution2"
          },
          {
            "name": "@TC32"
          },
          {
            "name": "@Demo"
          }
        ]
      },
      {
        "start_timestamp": "2021-11-29T07:58:56.924Z",
        "before": [
          {
            "output": [
              "--Starting the Execution--"
            ],
            "result": {
              "duration": 1083664000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 105,
        "name": "user is able to run created acquire File pipeline and validate same in logs",
        "description": "",
        "id": "creation-of-a-end-to-end-execution-of-the-pipeline-for-spark/tmpl-services;user-is-able-to-run-created-acquire-file-pipeline-and-validate-same-in-logs;;2",
        "after": [
          {
            "result": {
              "duration": 113000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "output": [
              "---Closing the Browser---"
            ],
            "result": {
              "duration": 81715000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.quitBrowser(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7109978000,
              "status": "passed"
            },
            "line": 75,
            "name": "user is on DIL login page",
            "match": {
              "location": "com.steps.commonSteps.userIsOnDILLoginPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 272832000,
              "status": "passed"
            },
            "line": 76,
            "name": "enter username and password",
            "match": {
              "location": "com.steps.commonSteps.enterUsernameAndPassword()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6722732000,
              "status": "passed"
            },
            "line": 77,
            "name": "clicks on createProject tab",
            "match": {
              "location": "com.steps.createProjectSteps.clicksOnCreateProjectTab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 502249000,
              "status": "passed"
            },
            "line": 78,
            "name": "creates project with \"AutoDIL\",\"ProjectForAutomation\",\"Test_Pipeline\" and engine",
            "match": {
              "arguments": [
                {
                  "val": "AutoDIL",
                  "offset": 22
                },
                {
                  "val": "ProjectForAutomation",
                  "offset": 32
                },
                {
                  "val": "Test_Pipeline",
                  "offset": 55
                }
              ],
              "location": "com.steps.createProjectSteps.entersAndSelectEngine(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 963031000,
              "status": "passed"
            },
            "line": 79,
            "name": "creates a \"PipeLIne\" with \"ProjectForAutomation\",\"Test_Pipeline\",\"STREAMING\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PipeLIne\"",
                  "offset": 10
                },
                {
                  "val": "\"ProjectForAutomation\"",
                  "offset": 26
                },
                {
                  "val": "\"Test_Pipeline\"",
                  "offset": 49
                },
                {
                  "val": "\"STREAMING\"",
                  "offset": 65
                }
              ],
              "location": "com.steps.createPipeLineSteps.createsAWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1065054000,
              "status": "passed"
            },
            "line": 80,
            "name": "enters pipeline properties",
            "match": {
              "location": "com.steps.createPipeLineSteps.enters_pipeline_properties(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PKey",
                  "PValue"
                ]
              },
              {
                "cells": [
                  "serviceType",
                  "AcquireFile"
                ]
              },
              {
                "cells": [
                  "isReturnable",
                  "False"
                ]
              },
              {
                "cells": [
                  "isSchemaNeededToBeRegister",
                  "False"
                ]
              },
              {
                "cells": [
                  "area",
                  "area"
                ]
              },
              {
                "cells": [
                  "flow",
                  "flow"
                ]
              },
              {
                "cells": [
                  "step",
                  "step"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5193768000,
              "status": "passed"
            },
            "line": 88,
            "name": "Spark properties",
            "match": {
              "location": "com.steps.createPipeLineSteps.spark_properties(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "SKey",
                  "SValue"
                ]
              },
              {
                "cells": [
                  "spark.sql.adaptive.coalescePartitions.enabled",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 796894000,
              "status": "passed"
            },
            "line": 91,
            "name": "clicks on \"Add a Source\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Add a Source\"",
                  "offset": 10
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.clicksOn(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7101692000,
              "status": "passed"
            },
            "line": 92,
            "name": "Enters \"DemoSource\",\"File System\",\"Auto_Kerb_DND\",\"CSV\",\"hdfs://10.0.1.92:8020/user/hdfstodeltaInput/sourceData.csv\",\",\",\"No Schema\",\"\u003cSchemaValue\u003e\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 7
                },
                {
                  "val": "\"File System\"",
                  "offset": 20
                },
                {
                  "val": "\"Auto_Kerb_DND\"",
                  "offset": 34
                },
                {
                  "val": "\"CSV\"",
                  "offset": 50
                },
                {
                  "val": "\"hdfs://10.0.1.92:8020/user/hdfstodeltaInput/sourceData.csv\"",
                  "offset": 56
                },
                {
                  "val": "\",\"",
                  "offset": 117
                },
                {
                  "val": "\"No Schema\"",
                  "offset": 121
                },
                {
                  "val": "\"\u003cSchemaValue\u003e\"",
                  "offset": 133
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.enters(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 566583000,
              "status": "passed"
            },
            "line": 93,
            "name": "Source should get created with \"DemoSource\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 31
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.sourceShouldGetCreatedWith(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1467201000,
              "status": "passed"
            },
            "line": 94,
            "name": "enters \"DemoDestination\",\"File System\",\"Auto_Kerb_DND\",\"CSV\" ,\"hdfs://10.0.1.92:8020/user/hdfsFileToFileDestination/\",\"topic2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoDestination\"",
                  "offset": 7
                },
                {
                  "val": "\"File System\"",
                  "offset": 25
                },
                {
                  "val": "\"Auto_Kerb_DND\"",
                  "offset": 39
                },
                {
                  "val": "\"CSV\"",
                  "offset": 55
                },
                {
                  "val": "\"hdfs://10.0.1.92:8020/user/hdfsFileToFileDestination/\"",
                  "offset": 62
                },
                {
                  "val": "\"topic2\"",
                  "offset": 118
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.entersAndClickAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10500527000,
              "status": "passed"
            },
            "line": 95,
            "name": "enters destination keys and value",
            "match": {
              "location": "com.steps.createSourceDestAndTransform.entersDestinationKeysAndValue(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "DKey",
                  "DValue"
                ]
              },
              {
                "cells": [
                  "mode",
                  ":"
                ]
              },
              {
                "cells": [
                  "escape",
                  ":"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 76832000,
              "status": "passed"
            },
            "line": 99,
            "name": "clicks add",
            "match": {
              "location": "com.steps.createSourceDestAndTransform.clicksAdd()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11938327000,
              "status": "passed"
            },
            "line": 100,
            "name": "PipeLine with status \"READY\" is validated",
            "match": {
              "arguments": [
                {
                  "val": "\"READY\"",
                  "offset": 21
                }
              ],
              "location": "com.steps.createPipeLineSteps.pipelineWithStatusIsValidated(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15276216000,
              "status": "passed"
            },
            "line": 101,
            "name": "executes the pipeline",
            "match": {
              "location": "com.steps.createPipeLineSteps.executesThePipeline()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6029046000,
              "status": "passed"
            },
            "line": 102,
            "name": "Pipeline record is validated on logs page",
            "match": {
              "location": "com.steps.createPipeLineSteps.pipelineRecordIsValidatedOnLogsPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@E2EExecutionDemo"
          },
          {
            "name": "@Smoke"
          },
          {
            "name": "@Reg"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@E2EExecution3"
          },
          {
            "name": "@TC33"
          },
          {
            "name": "@Demo"
          }
        ]
      },
      {
        "start_timestamp": "2021-11-29T08:00:13.695Z",
        "before": [
          {
            "output": [
              "--Starting the Execution--"
            ],
            "result": {
              "duration": 1101715000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 140,
        "name": "user is able to run created Publish File Streaming pipeline and validate same in logs",
        "description": "",
        "id": "creation-of-a-end-to-end-execution-of-the-pipeline-for-spark/tmpl-services;user-is-able-to-run-created-publish-file-streaming-pipeline-and-validate-same-in-logs;;2",
        "after": [
          {
            "result": {
              "duration": 88000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "output": [
              "---Closing the Browser---"
            ],
            "result": {
              "duration": 78742000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.quitBrowser(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9997466000,
              "status": "passed"
            },
            "line": 109,
            "name": "user is on DIL login page",
            "match": {
              "location": "com.steps.commonSteps.userIsOnDILLoginPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 304233000,
              "status": "passed"
            },
            "line": 110,
            "name": "enter username and password",
            "match": {
              "location": "com.steps.commonSteps.enterUsernameAndPassword()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1957104000,
              "status": "passed"
            },
            "line": 111,
            "name": "clicks on createProject tab",
            "match": {
              "location": "com.steps.createProjectSteps.clicksOnCreateProjectTab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 463878000,
              "status": "passed"
            },
            "line": 112,
            "name": "creates project with \"AutoDIL\",\"ProjectForAutomation\",\"Test_Pipeline\" and engine",
            "match": {
              "arguments": [
                {
                  "val": "AutoDIL",
                  "offset": 22
                },
                {
                  "val": "ProjectForAutomation",
                  "offset": 32
                },
                {
                  "val": "Test_Pipeline",
                  "offset": 55
                }
              ],
              "location": "com.steps.createProjectSteps.entersAndSelectEngine(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1096314000,
              "status": "passed"
            },
            "line": 113,
            "name": "creates a \"PipeLIne\" with \"ProjectForAutomation\",\"Test_Pipeline\",\"STREAMING\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PipeLIne\"",
                  "offset": 10
                },
                {
                  "val": "\"ProjectForAutomation\"",
                  "offset": 26
                },
                {
                  "val": "\"Test_Pipeline\"",
                  "offset": 49
                },
                {
                  "val": "\"STREAMING\"",
                  "offset": 65
                }
              ],
              "location": "com.steps.createPipeLineSteps.createsAWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1020269000,
              "status": "passed"
            },
            "line": 114,
            "name": "enters pipeline properties",
            "match": {
              "location": "com.steps.createPipeLineSteps.enters_pipeline_properties(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PKey",
                  "PValue"
                ]
              },
              {
                "cells": [
                  "serviceType",
                  "PublishFile"
                ]
              },
              {
                "cells": [
                  "isReturnable",
                  "False"
                ]
              },
              {
                "cells": [
                  "isSchemaNeededToBeRegister",
                  "False"
                ]
              },
              {
                "cells": [
                  "area",
                  "area"
                ]
              },
              {
                "cells": [
                  "flow",
                  "flow"
                ]
              },
              {
                "cells": [
                  "step",
                  "step"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5204086000,
              "status": "passed"
            },
            "line": 122,
            "name": "Spark properties",
            "match": {
              "location": "com.steps.createPipeLineSteps.spark_properties(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "SKey",
                  "SValue"
                ]
              },
              {
                "cells": [
                  "spark.sql.adaptive.coalescePartitions.enabled",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 794173000,
              "status": "passed"
            },
            "line": 125,
            "name": "clicks on \"Add a Source\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Add a Source\"",
                  "offset": 10
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.clicksOn(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6670401000,
              "status": "passed"
            },
            "line": 126,
            "name": "Enters \"DemoSource\",\"File System\",\"Auto_Kerb_DND\",\"DeltaIO\",\"hdfs://10.0.1.92:8020/user/hdfstodeltaInput/sourceData.csv\",\",\",\"No Schema\",\"\u003cSchemaValue\u003e\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 7
                },
                {
                  "val": "\"File System\"",
                  "offset": 20
                },
                {
                  "val": "\"Auto_Kerb_DND\"",
                  "offset": 34
                },
                {
                  "val": "\"DeltaIO\"",
                  "offset": 50
                },
                {
                  "val": "\"hdfs://10.0.1.92:8020/user/hdfstodeltaInput/sourceData.csv\"",
                  "offset": 60
                },
                {
                  "val": "\",\"",
                  "offset": 121
                },
                {
                  "val": "\"No Schema\"",
                  "offset": 125
                },
                {
                  "val": "\"\u003cSchemaValue\u003e\"",
                  "offset": 137
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.enters(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 593711000,
              "status": "passed"
            },
            "line": 127,
            "name": "Source should get created with \"DemoSource\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 31
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.sourceShouldGetCreatedWith(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1360419000,
              "status": "passed"
            },
            "line": 128,
            "name": "enters \"DemoDestination\",\"File System\",\"Auto_Kerb_DND\",\"DeltaIO\" ,\"hdfs://10.0.1.92:8020/user/hdfsFileToFileDestination/\",\"topic2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoDestination\"",
                  "offset": 7
                },
                {
                  "val": "\"File System\"",
                  "offset": 25
                },
                {
                  "val": "\"Auto_Kerb_DND\"",
                  "offset": 39
                },
                {
                  "val": "\"DeltaIO\"",
                  "offset": 55
                },
                {
                  "val": "\"hdfs://10.0.1.92:8020/user/hdfsFileToFileDestination/\"",
                  "offset": 66
                },
                {
                  "val": "\"topic2\"",
                  "offset": 122
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.entersAndClickAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10454505000,
              "status": "passed"
            },
            "line": 129,
            "name": "enters destination keys and value",
            "match": {
              "location": "com.steps.createSourceDestAndTransform.entersDestinationKeysAndValue(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "DKey",
                  "DValue"
                ]
              },
              {
                "cells": [
                  "mode",
                  ":"
                ]
              },
              {
                "cells": [
                  "escape",
                  ":"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 61491000,
              "status": "passed"
            },
            "line": 133,
            "name": "clicks add",
            "match": {
              "location": "com.steps.createSourceDestAndTransform.clicksAdd()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5620692000,
              "status": "passed"
            },
            "line": 134,
            "name": "Destination with \"DemoDestination\" should get created",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoDestination\"",
                  "offset": 17
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.destinationWithShouldGetCreated(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11799126000,
              "status": "passed"
            },
            "line": 135,
            "name": "PipeLine with status \"READY\" is validated",
            "match": {
              "arguments": [
                {
                  "val": "\"READY\"",
                  "offset": 21
                }
              ],
              "location": "com.steps.createPipeLineSteps.pipelineWithStatusIsValidated(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15291322000,
              "status": "passed"
            },
            "line": 136,
            "name": "executes the pipeline",
            "match": {
              "location": "com.steps.createPipeLineSteps.executesThePipeline()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6007567000,
              "status": "passed"
            },
            "line": 137,
            "name": "Pipeline record is validated on logs page",
            "match": {
              "location": "com.steps.createPipeLineSteps.pipelineRecordIsValidatedOnLogsPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@E2EExecutionDemo"
          },
          {
            "name": "@Smoke"
          },
          {
            "name": "@Reg"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@E2EExecution4"
          },
          {
            "name": "@TC34"
          },
          {
            "name": "@Demo"
          }
        ]
      },
      {
        "start_timestamp": "2021-11-29T08:01:33.594Z",
        "before": [
          {
            "output": [
              "--Starting the Execution--"
            ],
            "result": {
              "duration": 1087786000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 175,
        "name": "user is able to run created Publish File Batch pipeline and validate same in logs",
        "description": "",
        "id": "creation-of-a-end-to-end-execution-of-the-pipeline-for-spark/tmpl-services;user-is-able-to-run-created-publish-file-batch-pipeline-and-validate-same-in-logs;;2",
        "after": [
          {
            "result": {
              "duration": 90000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "output": [
              "---Closing the Browser---"
            ],
            "result": {
              "duration": 82425000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.quitBrowser(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6281808000,
              "status": "passed"
            },
            "line": 144,
            "name": "user is on DIL login page",
            "match": {
              "location": "com.steps.commonSteps.userIsOnDILLoginPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 788466000,
              "status": "passed"
            },
            "line": 145,
            "name": "enter username and password",
            "match": {
              "location": "com.steps.commonSteps.enterUsernameAndPassword()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1962847000,
              "status": "passed"
            },
            "line": 146,
            "name": "clicks on createProject tab",
            "match": {
              "location": "com.steps.createProjectSteps.clicksOnCreateProjectTab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 490433000,
              "status": "passed"
            },
            "line": 147,
            "name": "creates project with \"AutoDIL\",\"ProjectForAutomation\",\"Test_Pipeline\" and engine",
            "match": {
              "arguments": [
                {
                  "val": "AutoDIL",
                  "offset": 22
                },
                {
                  "val": "ProjectForAutomation",
                  "offset": 32
                },
                {
                  "val": "Test_Pipeline",
                  "offset": 55
                }
              ],
              "location": "com.steps.createProjectSteps.entersAndSelectEngine(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 968096000,
              "status": "passed"
            },
            "line": 148,
            "name": "creates a \"PipeLIne\" with \"ProjectForAutomation\",\"Test_Pipeline\",\"BATCH\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PipeLIne\"",
                  "offset": 10
                },
                {
                  "val": "\"ProjectForAutomation\"",
                  "offset": 26
                },
                {
                  "val": "\"Test_Pipeline\"",
                  "offset": 49
                },
                {
                  "val": "\"BATCH\"",
                  "offset": 65
                }
              ],
              "location": "com.steps.createPipeLineSteps.createsAWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1323509000,
              "status": "passed"
            },
            "line": 149,
            "name": "enters pipeline properties",
            "match": {
              "location": "com.steps.createPipeLineSteps.enters_pipeline_properties(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PKey",
                  "PValue"
                ]
              },
              {
                "cells": [
                  "serviceType",
                  "PublishFile"
                ]
              },
              {
                "cells": [
                  "isReturnable",
                  "False"
                ]
              },
              {
                "cells": [
                  "isSchemaNeededToBeRegister",
                  "False"
                ]
              },
              {
                "cells": [
                  "area",
                  "area"
                ]
              },
              {
                "cells": [
                  "flow",
                  "flow"
                ]
              },
              {
                "cells": [
                  "step",
                  "step"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5221448000,
              "status": "passed"
            },
            "line": 157,
            "name": "Spark properties",
            "match": {
              "location": "com.steps.createPipeLineSteps.spark_properties(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "SKey",
                  "SValue"
                ]
              },
              {
                "cells": [
                  "spark.sql.adaptive.coalescePartitions.enabled",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 790112000,
              "status": "passed"
            },
            "line": 160,
            "name": "clicks on \"Add a Source\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Add a Source\"",
                  "offset": 10
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.clicksOn(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6821306000,
              "status": "passed"
            },
            "line": 161,
            "name": "Enters \"DemoSource\",\"File System\",\"Auto_Kerb_DND\",\"DeltaIO\",\"hdfs://10.0.1.92:8020/user/hdfstodeltaInput/sourceData.csv\",\",\",\"No Schema\",\"\u003cSchemaValue\u003e\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 7
                },
                {
                  "val": "\"File System\"",
                  "offset": 20
                },
                {
                  "val": "\"Auto_Kerb_DND\"",
                  "offset": 34
                },
                {
                  "val": "\"DeltaIO\"",
                  "offset": 50
                },
                {
                  "val": "\"hdfs://10.0.1.92:8020/user/hdfstodeltaInput/sourceData.csv\"",
                  "offset": 60
                },
                {
                  "val": "\",\"",
                  "offset": 121
                },
                {
                  "val": "\"No Schema\"",
                  "offset": 125
                },
                {
                  "val": "\"\u003cSchemaValue\u003e\"",
                  "offset": 137
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.enters(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 614264000,
              "status": "passed"
            },
            "line": 162,
            "name": "Source should get created with \"DemoSource\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 31
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.sourceShouldGetCreatedWith(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1450192000,
              "status": "passed"
            },
            "line": 163,
            "name": "enters \"DemoDestination\",\"File System\",\"Auto_Kerb_DND\",\"DeltaIO\" ,\"hdfs://10.0.1.92:8020/user/hdfsFileToFileDestination/\",\"topic2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoDestination\"",
                  "offset": 7
                },
                {
                  "val": "\"File System\"",
                  "offset": 25
                },
                {
                  "val": "\"Auto_Kerb_DND\"",
                  "offset": 39
                },
                {
                  "val": "\"DeltaIO\"",
                  "offset": 55
                },
                {
                  "val": "\"hdfs://10.0.1.92:8020/user/hdfsFileToFileDestination/\"",
                  "offset": 66
                },
                {
                  "val": "\"topic2\"",
                  "offset": 122
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.entersAndClickAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10423323000,
              "status": "passed"
            },
            "line": 164,
            "name": "enters destination keys and value",
            "match": {
              "location": "com.steps.createSourceDestAndTransform.entersDestinationKeysAndValue(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "DKey",
                  "DValue"
                ]
              },
              {
                "cells": [
                  "mode",
                  ":"
                ]
              },
              {
                "cells": [
                  "escape",
                  ":"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 126146000,
              "status": "passed"
            },
            "line": 168,
            "name": "clicks add",
            "match": {
              "location": "com.steps.createSourceDestAndTransform.clicksAdd()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5625127000,
              "status": "passed"
            },
            "line": 169,
            "name": "Destination with \"DemoDestination\" should get created",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoDestination\"",
                  "offset": 17
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.destinationWithShouldGetCreated(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11802419000,
              "status": "passed"
            },
            "line": 170,
            "name": "PipeLine with status \"READY\" is validated",
            "match": {
              "arguments": [
                {
                  "val": "\"READY\"",
                  "offset": 21
                }
              ],
              "location": "com.steps.createPipeLineSteps.pipelineWithStatusIsValidated(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15779881000,
              "status": "passed"
            },
            "line": 171,
            "name": "executes the pipeline",
            "match": {
              "location": "com.steps.createPipeLineSteps.executesThePipeline()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5993850000,
              "status": "passed"
            },
            "line": 172,
            "name": "Pipeline record is validated on logs page",
            "match": {
              "location": "com.steps.createPipeLineSteps.pipelineRecordIsValidatedOnLogsPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@E2EExecutionDemo"
          },
          {
            "name": "@Smoke"
          },
          {
            "name": "@Reg"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@E2EExecution5"
          },
          {
            "name": "@TC35"
          },
          {
            "name": "@Demo"
          }
        ]
      },
      {
        "start_timestamp": "2021-11-29T08:02:51.248Z",
        "before": [
          {
            "output": [
              "--Starting the Execution--"
            ],
            "result": {
              "duration": 1086341000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 208,
        "name": "user is able to run created Publish kafka pipeline and validate same in logs",
        "description": "",
        "id": "creation-of-a-end-to-end-execution-of-the-pipeline-for-spark/tmpl-services;user-is-able-to-run-created-publish-kafka-pipeline-and-validate-same-in-logs;;2",
        "after": [
          {
            "result": {
              "duration": 90000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "output": [
              "---Closing the Browser---"
            ],
            "result": {
              "duration": 76131000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.quitBrowser(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7586303000,
              "status": "passed"
            },
            "line": 179,
            "name": "user is on DIL login page",
            "match": {
              "location": "com.steps.commonSteps.userIsOnDILLoginPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 407694000,
              "status": "passed"
            },
            "line": 180,
            "name": "enter username and password",
            "match": {
              "location": "com.steps.commonSteps.enterUsernameAndPassword()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2009402000,
              "status": "passed"
            },
            "line": 181,
            "name": "clicks on createProject tab",
            "match": {
              "location": "com.steps.createProjectSteps.clicksOnCreateProjectTab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 487481000,
              "status": "passed"
            },
            "line": 182,
            "name": "creates project with \"AutoDIL\",\"ProjectForAutomation\",\"Test_Pipeline\" and engine",
            "match": {
              "arguments": [
                {
                  "val": "AutoDIL",
                  "offset": 22
                },
                {
                  "val": "ProjectForAutomation",
                  "offset": 32
                },
                {
                  "val": "Test_Pipeline",
                  "offset": 55
                }
              ],
              "location": "com.steps.createProjectSteps.entersAndSelectEngine(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1017282000,
              "status": "passed"
            },
            "line": 183,
            "name": "creates a \"PipeLIne\" with \"ProjectForAutomation\",\"Test_Pipeline\",\"STREAMING\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PipeLIne\"",
                  "offset": 10
                },
                {
                  "val": "\"ProjectForAutomation\"",
                  "offset": 26
                },
                {
                  "val": "\"Test_Pipeline\"",
                  "offset": 49
                },
                {
                  "val": "\"STREAMING\"",
                  "offset": 65
                }
              ],
              "location": "com.steps.createPipeLineSteps.createsAWith(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 724404000,
              "status": "passed"
            },
            "line": 184,
            "name": "enters pipeline properties",
            "match": {
              "location": "com.steps.createPipeLineSteps.enters_pipeline_properties(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PKey",
                  "PValue"
                ]
              },
              {
                "cells": [
                  "serviceType",
                  "PublishKafka"
                ]
              },
              {
                "cells": [
                  "isSchemaNeededToBeRegister",
                  "true"
                ]
              },
              {
                "cells": [
                  "area",
                  "area"
                ]
              },
              {
                "cells": [
                  "flow",
                  "flow"
                ]
              },
              {
                "cells": [
                  "step",
                  "step"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5178859000,
              "status": "passed"
            },
            "line": 191,
            "name": "Spark properties",
            "match": {
              "location": "com.steps.createPipeLineSteps.spark_properties(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "SKey",
                  "SValue"
                ]
              },
              {
                "cells": [
                  "spark.sql.adaptive.coalescePartitions.enabled",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 829509000,
              "status": "passed"
            },
            "line": 194,
            "name": "clicks on \"Add a Source\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Add a Source\"",
                  "offset": 10
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.clicksOn(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7161266000,
              "status": "passed"
            },
            "line": 195,
            "name": "Enters \"DemoSource\",\"KAFKA\",\"TMPLKafkaConnection\",\"topic1\",\"No_Schema\",\"AutoManualSchemaDND\",\"Earlier\",\"k1\",\"v1\" and clicks on add",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 7
                },
                {
                  "val": "\"KAFKA\"",
                  "offset": 20
                },
                {
                  "val": "\"TMPLKafkaConnection\"",
                  "offset": 28
                },
                {
                  "val": "\"topic1\"",
                  "offset": 50
                },
                {
                  "val": "\"No_Schema\"",
                  "offset": 59
                },
                {
                  "val": "\"AutoManualSchemaDND\"",
                  "offset": 71
                },
                {
                  "val": "\"Earlier\"",
                  "offset": 93
                },
                {
                  "val": "\"k1\"",
                  "offset": 103
                },
                {
                  "val": "\"v1\"",
                  "offset": 108
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.entersAndClicksOnAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 566901000,
              "status": "passed"
            },
            "line": 196,
            "name": "Source should get created with \"DemoSource\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 31
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.sourceShouldGetCreatedWith(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11688808000,
              "status": "passed"
            },
            "line": 197,
            "name": "enters \"DemoDestination\",\"KAFKA\",\"TMPLKafkaConnection\",\"CSV\" ,\".csv\",\"topic2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoDestination\"",
                  "offset": 7
                },
                {
                  "val": "\"KAFKA\"",
                  "offset": 25
                },
                {
                  "val": "\"TMPLKafkaConnection\"",
                  "offset": 33
                },
                {
                  "val": "\"CSV\"",
                  "offset": 55
                },
                {
                  "val": "\".csv\"",
                  "offset": 62
                },
                {
                  "val": "\"topic2\"",
                  "offset": 69
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.entersAndClickAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10462026000,
              "status": "passed"
            },
            "line": 198,
            "name": "enters destination keys and value",
            "match": {
              "location": "com.steps.createSourceDestAndTransform.entersDestinationKeysAndValue(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "DKey",
                  "DValue"
                ]
              },
              {
                "cells": [
                  "trigger",
                  "10 seconds"
                ]
              },
              {
                "cells": [
                  "checkpointLocation",
                  "/tmp/1099/"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 158869000,
              "status": "passed"
            },
            "line": 202,
            "name": "clicks add",
            "match": {
              "location": "com.steps.createSourceDestAndTransform.clicksAdd()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11814141000,
              "status": "passed"
            },
            "line": 203,
            "name": "PipeLine with status \"READY\" is validated",
            "match": {
              "arguments": [
                {
                  "val": "\"READY\"",
                  "offset": 21
                }
              ],
              "location": "com.steps.createPipeLineSteps.pipelineWithStatusIsValidated(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15761185000,
              "status": "passed"
            },
            "line": 204,
            "name": "executes the pipeline",
            "match": {
              "location": "com.steps.createPipeLineSteps.executesThePipeline()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6030439000,
              "status": "passed"
            },
            "line": 205,
            "name": "Pipeline record is validated on logs page",
            "match": {
              "location": "com.steps.createPipeLineSteps.pipelineRecordIsValidatedOnLogsPage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@E2EExecutionDemo"
          },
          {
            "name": "@Smoke"
          },
          {
            "name": "@Reg"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@E2EExecution6"
          },
          {
            "name": "@TC53"
          },
          {
            "name": "@Demo"
          }
        ]
      }
    ],
    "name": "Creation of a End to End Execution of the pipeline for Spark/TMPL services",
    "description": "",
    "id": "creation-of-a-end-to-end-execution-of-the-pipeline-for-spark/tmpl-services",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/projects/E2EExecutionTest.feature",
    "tags": [
      {
        "name": "@E2EExecutionDemo",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-11-29T08:04:14.316Z",
        "before": [
          {
            "output": [
              "--Starting the Execution--"
            ],
            "result": {
              "duration": 1091456000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 18,
        "name": "user is able to create file type source for ManualSchema",
        "description": "",
        "id": "creation-of-sources-and-destination;user-is-able-to-create-file-type-source-for-manualschema;;2",
        "after": [
          {
            "result": {
              "duration": 103000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "output": [
              "---Closing the Browser---"
            ],
            "result": {
              "duration": 73296000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.quitBrowser(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7927570000,
              "status": "passed"
            },
            "line": 8,
            "name": "user is on DIL login page",
            "match": {
              "location": "com.steps.commonSteps.userIsOnDILLoginPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 341275000,
              "status": "passed"
            },
            "line": 9,
            "name": "enter username and password",
            "match": {
              "location": "com.steps.commonSteps.enterUsernameAndPassword()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1671910000,
              "status": "passed"
            },
            "line": 10,
            "name": "clicks on createProject tab",
            "match": {
              "location": "com.steps.createProjectSteps.clicksOnCreateProjectTab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 461195000,
              "status": "passed"
            },
            "line": 11,
            "name": "creates project with \"AutoDIL\",\"ProjectForAutomation\",\"Test_Pipeline\" and engine",
            "match": {
              "arguments": [
                {
                  "val": "AutoDIL",
                  "offset": 22
                },
                {
                  "val": "ProjectForAutomation",
                  "offset": 32
                },
                {
                  "val": "Test_Pipeline",
                  "offset": 55
                }
              ],
              "location": "com.steps.createProjectSteps.entersAndSelectEngine(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5807874000,
              "status": "passed"
            },
            "line": 12,
            "name": "creates a \"PipeLIne\" having \"ProjectForAutomation\" and \"Test_Pipeline\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PipeLIne\"",
                  "offset": 10
                },
                {
                  "val": "\"ProjectForAutomation\"",
                  "offset": 28
                },
                {
                  "val": "\"Test_Pipeline\"",
                  "offset": 55
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.createsAHavingAnd(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 814426000,
              "status": "passed"
            },
            "line": 13,
            "name": "clicks on \"Add a Source\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Add a Source\"",
                  "offset": 10
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.clicksOn(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6990981000,
              "status": "passed"
            },
            "line": 14,
            "name": "Enters \"DemoSource\",\"File System\",\"Auto_Kerb_DND\",\"CSV\",\".csv\",\",\",\"Manual Schema\",\"AutoManualSchemaDND\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 7
                },
                {
                  "val": "\"File System\"",
                  "offset": 20
                },
                {
                  "val": "\"Auto_Kerb_DND\"",
                  "offset": 34
                },
                {
                  "val": "\"CSV\"",
                  "offset": 50
                },
                {
                  "val": "\".csv\"",
                  "offset": 56
                },
                {
                  "val": "\",\"",
                  "offset": 63
                },
                {
                  "val": "\"Manual Schema\"",
                  "offset": 67
                },
                {
                  "val": "\"AutoManualSchemaDND\"",
                  "offset": 83
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.enters(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 573181000,
              "status": "passed"
            },
            "line": 15,
            "name": "Source should get created with \"DemoSource\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 31
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.sourceShouldGetCreatedWith(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@CreateSourceAndDestination"
          },
          {
            "name": "@Smoke"
          },
          {
            "name": "@Reg"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@CSource-Test1"
          },
          {
            "name": "@TC36"
          },
          {
            "name": "@Demo"
          }
        ]
      },
      {
        "start_timestamp": "2021-11-29T08:04:40.107Z",
        "before": [
          {
            "output": [
              "--Starting the Execution--"
            ],
            "result": {
              "duration": 1081901000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 99,
        "name": "user is able to create Kafka type Destination",
        "description": "",
        "id": "creation-of-sources-and-destination;user-is-able-to-create-kafka-type-destination;;2",
        "after": [
          {
            "output": [
              "this is my failure message"
            ],
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png",
                "name": "user_is_able_to_create_Kafka_type_Destination"
              }
            ],
            "result": {
              "duration": 94822000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "output": [
              "---Closing the Browser---"
            ],
            "result": {
              "duration": 96335000,
              "status": "passed"
            },
            "match": {
              "location": "com.steps.Hooks.quitBrowser(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7842143000,
              "status": "passed"
            },
            "line": 86,
            "name": "user is on DIL login page",
            "match": {
              "location": "com.steps.commonSteps.userIsOnDILLoginPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 300495000,
              "status": "passed"
            },
            "line": 87,
            "name": "enter username and password",
            "match": {
              "location": "com.steps.commonSteps.enterUsernameAndPassword()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1591509000,
              "status": "passed"
            },
            "line": 88,
            "name": "clicks on createProject tab",
            "match": {
              "location": "com.steps.createProjectSteps.clicksOnCreateProjectTab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 441612000,
              "status": "passed"
            },
            "line": 89,
            "name": "creates project with \"AutoDIL\",\"ProjectForAutomation\",\"Test_Pipeline\" and engine",
            "match": {
              "arguments": [
                {
                  "val": "AutoDIL",
                  "offset": 22
                },
                {
                  "val": "ProjectForAutomation",
                  "offset": 32
                },
                {
                  "val": "Test_Pipeline",
                  "offset": 55
                }
              ],
              "location": "com.steps.createProjectSteps.entersAndSelectEngine(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5773415000,
              "status": "passed"
            },
            "line": 90,
            "name": "creates a \"PipeLIne\" having \"ProjectForAutomation\" and \"Test_Pipeline\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PipeLIne\"",
                  "offset": 10
                },
                {
                  "val": "\"ProjectForAutomation\"",
                  "offset": 28
                },
                {
                  "val": "\"Test_Pipeline\"",
                  "offset": 55
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.createsAHavingAnd(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 795654000,
              "status": "passed"
            },
            "line": 91,
            "name": "clicks on \"Add a Source\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Add a Source\"",
                  "offset": 10
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.clicksOn(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7041284000,
              "status": "passed"
            },
            "line": 92,
            "name": "Enters \"DemoSource\",\"File System\",\"Auto_Kerb_DND\",\"CSV\",\".csv\",\",\",\"Manual Schema\",\"AutoManualSchemaDND\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 7
                },
                {
                  "val": "\"File System\"",
                  "offset": 20
                },
                {
                  "val": "\"Auto_Kerb_DND\"",
                  "offset": 34
                },
                {
                  "val": "\"CSV\"",
                  "offset": 50
                },
                {
                  "val": "\".csv\"",
                  "offset": 56
                },
                {
                  "val": "\",\"",
                  "offset": 63
                },
                {
                  "val": "\"Manual Schema\"",
                  "offset": 67
                },
                {
                  "val": "\"AutoManualSchemaDND\"",
                  "offset": 83
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.enters(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 574118000,
              "status": "passed"
            },
            "line": 93,
            "name": "Source should get created with \"DemoSource\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoSource\"",
                  "offset": 31
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.sourceShouldGetCreatedWith(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[text()\u003d\u0027KafkaSSLConnection \u0027]\"}\n  (Session info: chrome\u003d90.0.4430.212)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027pihu-Latitude-5400\u0027, ip: \u0027127.0.1.1\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00275.11.0-40-generic\u0027, java.version: \u002711.0.11\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.212, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: /tmp/.com.google.Chrome.FfZgJm}, goog:chromeOptions: {debuggerAddress: localhost:35019}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}\nSession ID: a6df08135d90718348edb22998be8b0d\n*** Element info: {Using\u003dxpath, value\u003d//*[text()\u003d\u0027KafkaSSLConnection \u0027]}\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\n\tat com.managersUtilities.CommonFunction.getCustomisedWebElement(CommonFunction.java:231)\n\tat com.pagesPF.PipeLIne_BuilderPage.createDestinationKafka_FileSystem(PipeLIne_BuilderPage.java:188)\n\tat com.steps.createSourceDestAndTransform.entersAndClickAdd(createSourceDestAndTransform.java:106)\n\tat ✽.enters \"DemoDestination\",\"KAFKA\",\"KafkaSSLConnection\",\"CSV\" ,\".csv\",\"CDR\"(file:///home/pihu/dil_automation/src/test/resources/features/projects/Kafka,FileSystem_CreateSourceDestAndTransformation.feature:94)\n",
              "duration": 10793344000,
              "status": "failed"
            },
            "line": 94,
            "name": "enters \"DemoDestination\",\"KAFKA\",\"KafkaSSLConnection\",\"CSV\" ,\".csv\",\"CDR\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoDestination\"",
                  "offset": 7
                },
                {
                  "val": "\"KAFKA\"",
                  "offset": 25
                },
                {
                  "val": "\"KafkaSSLConnection\"",
                  "offset": 33
                },
                {
                  "val": "\"CSV\"",
                  "offset": 54
                },
                {
                  "val": "\".csv\"",
                  "offset": 61
                },
                {
                  "val": "\"CDR\"",
                  "offset": 68
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.entersAndClickAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 414000,
              "status": "skipped"
            },
            "line": 95,
            "name": "clicks add",
            "match": {
              "location": "com.steps.createSourceDestAndTransform.clicksAdd()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 320000,
              "status": "skipped"
            },
            "line": 96,
            "name": "Destination with \"DemoDestination\" should get created",
            "match": {
              "arguments": [
                {
                  "val": "\"DemoDestination\"",
                  "offset": 17
                }
              ],
              "location": "com.steps.createSourceDestAndTransform.destinationWithShouldGetCreated(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@CreateSourceAndDestination"
          },
          {
            "name": "@Smoke"
          },
          {
            "name": "@Reg"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@CDestination-Test1"
          },
          {
            "name": "@TC39"
          },
          {
            "name": "@Demo"
          }
        ]
      }
    ],
    "name": "Creation of Sources and Destination",
    "description": "  As a user I want to Create a Source and Destination,Validate Source and Destination attributes",
    "id": "creation-of-sources-and-destination",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/projects/Kafka,FileSystem_CreateSourceDestAndTransformation.feature",
    "tags": [
      {
        "name": "@CreateSourceAndDestination",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]